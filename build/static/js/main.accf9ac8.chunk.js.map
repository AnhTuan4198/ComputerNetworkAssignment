{"version":3,"sources":["components/LoginForm.js","chat/SideBar.js","components/message/Messages.js","components/message/MessagesInput.js","components/message/FileInput.js","chat/ChatConsole.js","chat/ChatContainer.js","Layout.js","App.js","serviceWorker.js","index.js","actions/event.js"],"names":["LoginForm","props","handleSubmit","e","preventDefault","socket","nickname","state","emit","VERIFY_USER","setUser","handlOnchange","setState","target","name","value","user","logined","setError","error","bind","this","className","onSubmit","id","htmlFor","type","placeholder","autoComplete","onChange","disabled","length","Component","SideBar","receiver","showUserList","ConnecttingUser","handleChange","getConnectingList","openPrivateChat","on","USER_CONNECTED","connectedUser","newConnectingUserList","Object","entries","logout","chats","activeChat","setActivechat","onClick","map","cnuser","key","refs","chat","lastMessage","messages","conversation","users","find","toUpperCase","message","Messages","scrollDown","maxScrollTop","messageList","current","scrollHeight","clientHeight","scrollTop","React","createRef","typingUsers","messList","mess","link","sender","href","fileURL","download","fileName","time","typingList","typingUser","ref","MessagesInput","handlChange","isTyping","handleSendFileForm","sendMessage","console","log","lastUpdate","Date","now","sendTyping","startCheckTyping","typingInterval","setInterval","stopCheckTyping","clearInterval","showSendFileForm","onKeyUp","keyCode","FileInput","buffer","handleSubmitfile","handleChangeFile","sendFile","input","document","querySelector","files","reader","FileReader","onload","result","readAsArrayBuffer","ChatConsole","data","ChatContainer","resetChat","addChat","reset","p2psocket","newChatList","messageEvent","MESSAGE_RECEIVED","typingEvent","TYPING","fileEvent","FILE_RECEIVED","addMessagetoChat","updateTyping","addLinkToChat","chatId","push","file","blob","Blob","URL","window","webkitURL","createObjectURL","includes","filter","FILE_SENT","MESSAGE_SENT","sendPrivateChat","initSocket","COMMUNITY_CHAT","PRIVATE_CHAT","Layout","io","p2p","peerOpts","trickle","autoUpgrade","usePeerConnection","LOG_OUT","App","title","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","module","exports","USER_DISCONNECTED"],"mappings":"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","file":"static/js/main.accf9ac8.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { VERIFY_USER } from \"../actions/event\";\nimport '../styles/loginform/Loginform.css'\n\nclass LoginForm extends Component {\n    constructor(props){\n        super(props)\n        this.state={\n            nickname:'',\n            error:null\n        }\n        this.handleSubmit=this.handleSubmit.bind(this);\n        this.handlOnchange=this.handlOnchange.bind(this);\n    }\n    handleSubmit = (e)=>{\n        e.preventDefault();\n        const {socket} = this.props;\n        const {nickname}=this.state;\n        socket.emit(VERIFY_USER,nickname,this.setUser)\n    }\n    handlOnchange=(e)=>{\n        this.setState({[e.target.name]:e.target.value})\n    }\n    setUser=({user,logined})=>{\n        if(logined){\n            this.setError(\"Nickname already taken\")\n        }else{\n            this.setError(\"\");\n            this.props.setUser(user);\n        }\n    }   \n    setError=(error)=>{\n        this.setState({error:error})\n    }\n    render() {\n        const {nickname , error} = this.state\n        return (\n          <div className=\"LoginArea\">\n            <form onSubmit={this.handleSubmit} id=\"Login-form\">\n                <h2>Welcome</h2>\n                <label htmlFor=\"nickname\"><h2>Don't have nickname?</h2></label>\n                <input\n                    id=\"nickname\" \n                    name=\"nickname\"\n                    type=\"text\"\n                    placeholder=\"Get cool nickname here \"\n                    autoComplete=\"off\"\n                    onChange={this.handlOnchange}\n                />\n                <div id=\"error\">{error? error:null}</div>\n                <button disabled={this.state.nickname.length<1} className=\"btn\" type=\"submit\">GO!!</button>\n            </form>\n          </div>\n        );\n    }\n}\n\nexport default LoginForm;","import React, { Component } from 'react';\nimport {USER_CONNECTED} from '../actions/event';\nimport '../styles/sidebar/SideBar.css'\nimport{ TiThMenuOutline} from 'react-icons/ti';\nimport {FiLogOut} from 'react-icons/fi';\nimport { IoIosPersonAdd } from \"react-icons/io\";\nclass SideBar extends Component {\n    constructor(props){\n        super(props)\n        this.state={\n            receiver:\"\",\n            showUserList:false,\n            ConnecttingUser:[]\n        }\n        this.handleChange=this.handleChange.bind(this);\n        this.handleSubmit=this.handleSubmit.bind(this);\n    }\n    componentDidMount(){\n      this.getConnectingList();\n    }\n    handleChange(e){\n        this.setState({[e.target.name]:e.target.value})\n        //console.log(this.state.receiver)\n    }\n    handleSubmit(e){\n        e.preventDefault();\n        //console.log(this.state.receiver);\n        this.props.openPrivateChat(this.state.receiver);\n        this.setState({receiver:\"\"})\n    }\n    getConnectingList(){\n      const {socket}= this.props;\n      socket.on(USER_CONNECTED,(connectedUser)=>{\n        let newConnectingUserList= Object.entries(connectedUser);\n        this.setState({ConnecttingUser:[...newConnectingUserList]})\n      })\n    }\n    render() {\n        //console.log(this.state.ConnecttingUser);\n        const {\n          user,\n          logout,\n          chats,\n          activeChat,\n          setActivechat,\n        } = this.props;\n        \n        const {ConnecttingUser} = this.state;\n        return (\n          <div className=\"Sidebar-container\">\n            <div className=\"Sidebar-heading\">\n              <div className=\"App-name\">Cool Chat App</div>\n              <div className=\"heading-menu\">\n                <TiThMenuOutline />\n              </div>\n            </div>\n            <div className=\"Sidebar-option\">\n              <div\n                className=\"Show-Chat-List\"\n                onClick={() => {\n                  this.setState({ showUserList: false });\n                }}\n              >\n                Chat List\n              </div>\n              <div\n                className=\"Show-Online-User\"\n                onClick={() => {\n                  this.setState({ showUserList: true });\n                }}\n              >\n                Online User\n              </div>\n            </div>\n            <div className=\"Sidebar-search\">\n              <form onSubmit={this.handleSubmit} className=\"Search-form\">\n                <input\n                  className=\"Search-input\"\n                  placeholder=\"Search for connecting user\"\n                  type=\"text\"\n                  name=\"receiver\"\n                  autoComplete=\"off\"\n                  value={this.state.receiver}\n                  onChange={this.handleChange}\n                />\n                <button\n                  className=\"plus\"\n                  type=\"submit\"\n                  disabled={this.state.receiver.length < 1}\n                >\n                  <IoIosPersonAdd />\n                </button>\n              </form>\n            </div>\n            <div className=\"Sidebar-list\">\n              {this.state.showUserList ? (\n                <div className=\"Sidebar-user-list\">\n                    {ConnecttingUser.map((cnuser) => {\n                      if(cnuser[0]!==user.name){\n                        return (\n                          <div\n                            onClick={()=>{\n                              this.setState({showUserList:false})\n                              this.props.openPrivateChat(cnuser[0]);\n                            }\n                          }\n                          key={cnuser[1].id}\n                          className=\"UserList-UserItem\"\n                          >\n                          {cnuser[0]}\n                          </div>\n                          )\n                      }\n                    })\n                    }\n                </div>\n              ) : (\n                <div\n                  className=\"Sidebar-chat-list\" /*ref=\"users\"*/\n                  onClick={(e) => {\n                    e.target === this.refs.user && setActivechat(null);\n                  }}\n                >\n                  {chats.map((chat) => {\n                    if (chat.name) {\n                      //console.log(chat.users);\n                      const lastMessage =\n                        chat.messages[chat.messages.length - 1];\n                      const conversation =\n                        chat.users.find((name) => {\n                          return name !== user.name;\n                        }) || \"Community\";\n                      //console.log(conversation);\n                      const className =\n                        activeChat && activeChat.id === chat.id ? \"active\" : \"\";\n                      return (\n                        <div\n                          key={chat.id}\n                          className={`user ${className}`}\n                          onClick={() => setActivechat(chat)}\n                        >\n                          <div className=\"user-ava\">\n                            {conversation[0].toUpperCase()}\n                          </div>\n                          <div className=\"user-info\">\n                            <div className=\"user-name\">{conversation}</div>\n                            {lastMessage && (\n                              <div className=\"lastMessage\">\n                                {lastMessage.message}\n                              </div>\n                            )}\n                          </div>\n                        </div>\n                      );\n                    }\n                    return null;\n                  })}\n                </div>\n              )}\n            </div>\n\n            <div className=\"Sidebar-current-user\">\n              <div className=\"current-user-name\">{user.name}</div>\n              <div\n                id=\"logout\"\n                onClick={() => {\n                  logout();\n                }}\n              >\n                <FiLogOut />\n              </div>\n            </div>\n          </div>\n        );\n    }\n}\n\nexport default SideBar;","import React, { Component } from 'react';\nimport '../../styles/message/Messages.css'\nimport '../../styles/chat/ChatConsole.css';\nimport { TiHeartFullOutline } from 'react-icons/ti';\n\nclass Messages extends Component {\n    constructor(props){\n        super(props)\n        this.messageList=React.createRef();\n    }\n    componentDidMount(){\n        this.scrollDown();\n    }\n    componentDidUpdate(){\n      this.scrollDown();\n    }\n    scrollDown=()=>{\n      const scrollHeight = this.messageList.current.scrollHeight;\n      const height = this.messageList.current.clientHeight;\n      const maxScrollTop = scrollHeight - height;\n      this.messageList.current.scrollTop = maxScrollTop > 0 ? maxScrollTop : 0;\n    }\n    render() {\n        \n        const {user,messages,typingUsers} = this.props\n        const messList = messages.map((mess) => {\n          if(mess.link){\n            return (\n              <div\n                key={mess.id}\n                className={`message ${\n                  mess.sender === user.name ? \"right\" : \"\"\n                }`}\n              >\n                <div className=\"content\"><a href={mess.fileURL} download={mess.fileName}\n                target=\"_blank\">{mess.fileName}</a></div>\n                <div className=\"info\">\n                  <div className=\"Time\">{mess.time}</div>\n                  <div className=\"sender\">{mess.sender}</div>\n                </div>\n              </div>\n            );\n          }\n          return (            \n            <div\n              key={mess.id}\n              className={`message ${mess.sender === user.name ? \"right\" : \"\"}`}\n            >\n                <div className=\"content\">{mess.message}</div>\n                <div className=\"info\">\n                  <div className=\"Time\">{mess.time}</div>\n                  <div className=\"sender\">{mess.sender}</div>\n                </div>\n            </div>\n          );\n        });\n        const typingList = typingUsers.map((typingUser) => {\n          return (\n            <div key={typingUser} className=\"typing-status\">\n              {`${typingUser}`}\n              <span> </span>\n              <span>i</span>\n              <span>s</span>\n              <span> </span>\n              <span>t</span>\n              <span>y</span>\n              <span>p</span>\n              <span>i</span>\n              <span>n</span>\n              <span>g</span>\n              <span>.</span>\n              <span>.</span>\n              <span>.</span>\n            </div>\n          );\n        });\n        return (\n          <div className=\"container\">\n            <div className=\"thread\" ref={this.messageList}>\n              {messList}\n              {typingList}\n            </div>\n          </div>\n        );\n    }\n}\n\nexport default Messages;","import React, { Component } from 'react';\nimport { RiMailSendLine, RiFileUploadLine } from \"react-icons/ri\";\nimport '../../styles/message/MessagesInput.css';\n\nclass MessagesInput extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            message:\"\",\n            isTyping:false\n        }\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handlChange = this.handlChange.bind(this);\n        this.handleSendFileForm=this.handleSendFileForm.bind(this); \n    }\n    handleSubmit(e){\n        e.preventDefault();\n        this.sendMessage();\n        this.setState({message:\"\"})\n    }\n\n    sendMessage(){\n        const {message}=this.state;\n        console.log(message);\n        this.props.sendMessage(message);\n    }\n    sendTyping(){\n        this.lastUpdate= Date.now();\n        const {isTyping} = this.state\n        if(!isTyping){\n            this.setState({isTyping:true})\n            this.props.sendTyping(true);\n            this.startCheckTyping();\n        }\n    }\n\n    startCheckTyping(){\n        console.log(\"Typing\");\n        this.typingInterval = setInterval(()=>{\n            if(Date.now() - this.lastUpdate > 300){\n                this.setState({isTyping:false})\n                this.stopCheckTyping();\n            }\n        },3000)\n    }\n    stopCheckTyping(){\n        console.log(\"Stop Typing\");\n        if(this.typingInterval){\n            clearInterval(this.typingInterval);\n            this.props.sendTyping(false);\n        }\n    }\n    handlChange=(e)=>{\n         this.setState({[e.target.name]:e.target.value})\n    }\n    handleSendFileForm(){\n        console.log('showform');\n        this.props.showSendFileForm();\n    }\n    render() {\n        \n        return (\n          <div className=\"Message-input\">\n            <form className=\"form\" onSubmit={this.handleSubmit}>\n              <input\n                id=\"message\"\n                name=\"message\"\n                type=\"text\"\n                autoComplete=\"off\"\n                value={this.state.message}\n                placeholder=\"Type some thing interresting here\"\n                onKeyUp={(e) => {\n                  e.keyCode !== 13 && this.sendTyping();\n                }}\n                onChange={this.handlChange}\n              />\n              <button\n                className=\"btn\"\n                disabled={this.state.message.length < 1}\n                type=\"submit\"\n              >\n                <RiMailSendLine />\n              </button>\n            </form>\n            <button className=\"file-btn\" onClick={this.handleSendFileForm}>\n              <RiFileUploadLine/>\n            </button>\n          </div>\n        );\n    }\n}\n\nexport default MessagesInput;","import React, { Component } from 'react';\nimport '../../styles/message/MessagesInput.css';\nimport '../../styles/message/FileInput.css';\nclass FileInput extends Component {\n    constructor(props){\n        super(props);\n        this.state={\n            fileName:'',\n            buffer:[],\n            type:''\n        }\n        this.handleSubmitfile=this.handleSubmitfile.bind(this);\n        this.handleChangeFile=this.handleChangeFile.bind(this);\n    }\n    handleSubmitfile(e){\n        e.preventDefault();\n        this.props.sendFile({fileName:this.state.fileName,buffer:this.state.buffer,type:this.state.type});\n        this.setState({\n            fileName:'',\n            buffer:[],\n            type:''\n        });\n        this.props.showSendFileForm();\n        //setInterval(this.props.showSendFileForm,500);\n        //clearInterval(setInterval(this.props.showSendFileForm, 500));\n    }\n    async handleChangeFile(){\n        let input = document.querySelector(\"input[type=file]\");\n        console.log(input.files[0]);\n        const reader = new FileReader();\n        reader.onload = ()=> {\n          this.setState({fileName:input.files[0].name, buffer: [reader.result],type:input.files[0].type});\n          console.log(this.state);\n        };\n        reader.readAsArrayBuffer(input.files[0]);\n    }\n    render() {\n        return (\n          <div className=\"file-form\">\n            <form onSubmit={this.handleSubmitfile}>\n              <button\n                className=\"cancle-btn\"\n                onClick={this.props.showSendFileForm}\n              >\n                X\n              </button>\n              <input type=\"file\" onChange={this.handleChangeFile}></input>\n              <button className=\"btn\" type=\"submit\">\n                Send\n              </button>\n            </form>\n          </div>\n        );\n    }\n}\n\nexport default FileInput;","import React, { Component } from 'react';\nimport '../styles/chat/ChatConsole.css'\nimport Messages from '../components/message/Messages';\nimport MessageInput from '../components/message/MessagesInput';\nimport FileInput from '../components/message/FileInput';\nclass ChatConsole extends Component {\n    constructor(props){\n        super(props)\n        this.state={\n            showSendFileForm:false\n        }\n        this.showSendFileForm=this.showSendFileForm.bind(this);\n    }\n    showSendFileForm(){\n        this.setState({showSendFileForm:!this.state.showSendFileForm});\n        console.log(this.state.showSendFileForm);\n    }\n    render() {\n        const {activeChat,user,sendMessage,sendTyping,sendFile}=this.props\n        return (\n          <div className=\"Chat-Console-container\">\n            <div className=\"console-heading\">{activeChat.name}</div>\n            <Messages\n              user={user}\n              messages={activeChat.messages}\n              typingUsers={activeChat.typingUsers}\n            />\n            <MessageInput\n              sendMessage={(message) => {\n                sendMessage(activeChat.id, message);\n              }}\n              sendTyping={(isTyping) => {\n                sendTyping(activeChat.id, isTyping);\n              }}\n              showSendFileForm={this.showSendFileForm}\n            />\n            {this.state.showSendFileForm ? (\n              <FileInput\n                sendFile={(data) => {\n                  //console.log(data);\n                  sendFile(activeChat.id, data);\n                }}\n                showSendFileForm={this.showSendFileForm}\n              />\n            ) : null}\n          </div>\n        );\n    }\n}\n\nexport default ChatConsole;","import React, { Component } from 'react';\nimport SideBar from './SideBar';\nimport ChatConsole from './ChatConsole';\nimport '../styles/chat/ChatContainer.css'\nimport {\n  MESSAGE_SENT,\n  TYPING,\n  COMMUNITY_CHAT,\n  MESSAGE_RECEIVED,\n  PRIVATE_CHAT,\n  FILE_SENT,\n  FILE_RECEIVED\n} from \"../actions/event\";\nimport p2p from \"socket.io-p2p\";\n\n\nclass ChatContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chats: [],\n      activeChat: null,\n    };\n    this.sendPrivateChat=this.sendPrivateChat.bind(this);\n  }\n  componentDidMount() {\n    const { socket} = this.props;\n    this.initSocket(socket);\n  }\n  initSocket(socket){\n    const {user,p2psocket} =this.props;\n    //console.log(p2psocket);\n    socket.emit(COMMUNITY_CHAT, this.resetChat);\n    socket.on(PRIVATE_CHAT,this.addChat);\n    socket.on('connect',()=>{\n       socket.emit(COMMUNITY_CHAT, this.resetChat);\n    })\n  }\n  sendPrivateChat(receiver){\n    const {socket,user}=this.props;\n    const {activeChat}=this.state;\n    socket.emit(PRIVATE_CHAT,{receiver,user:user.name,activeChat})\n  }\n  //reset chat\n  resetChat = (chat) => {\n    return this.addChat(chat, true);\n  };\n  //addChat\n  addChat = (chat, reset=false) => {\n    const { socket, p2psocket } = this.props;\n    const { chats } = this.state;\n\n    const newChatList = reset ? [chat] : [...chats, chat];\n    this.setState({\n      chats: newChatList,\n      activeChat: reset ? chat : this.state.activeChat,\n    });\n\n    const messageEvent = `${MESSAGE_RECEIVED}-${chat.id}`;\n    const typingEvent = `${TYPING}-${chat.id}`;\n    const fileEvent =`${FILE_RECEIVED}-${chat.id}`;\n\n    socket.on(messageEvent, this.addMessagetoChat(chat.id));\n    socket.on(typingEvent, this.updateTyping(chat.id));\n    socket.on(fileEvent,this.addLinkToChat(chat.id));\n  };\n\n  addMessagetoChat = (chatId) => {\n    return (message) => {\n      //console.log(message);\n      const { chats } = this.state;\n      let newChatList = chats.map((chat) => {\n        if (chat.id === chatId) {\n          chat.messages.push(message);\n          //console.log(chat.messages);\n        }\n        return chat;\n      });\n      this.setState({ chats: newChatList });\n    };\n  };\n\n  addLinkToChat= (chatId)=>{\n    return (file)=>{\n      //console.log(file);\n      let blob= new Blob(file.buffer,{type:file.type});\n      let URLcreator = URL||window.webkitURL;\n      let fileURL=URLcreator.createObjectURL(blob);\n      const {chats}=this.state;\n      let newChatList = chats.map(chat=>{\n        if(chat.id==chatId){\n          chat.messages.push({fileURL,id:file.id,sender:file.sender,link:true,fileName:file.fileName});\n        }\n        return chat\n      });\n      this.setState({chats:newChatList});\n      \n    }\n  }\n\n  updateTyping = (chatId) => {\n    return ({ isTyping, user }) => {\n      if (user !== this.props.user.name) {\n        const { chats } = this.state;\n        let newChatList = chats.map((chat) => {\n          if (chat.id === chatId) {\n            //console.log(chat.typingUsers.includes(user))\n            if (isTyping && !chat.typingUsers.includes(user) ) {\n              chat.typingUsers.push(user);\n              //console.log(`there are typing people ${chat.typingUsers}`);\n            } else if (!isTyping && chat.typingUsers.includes(user) )\n              chat.typingUsers = chat.typingUsers.filter((name) => name !== user);\n              //console.log(`there are typing people ${chat.typingUsers}`);\n          }\n          return chat;\n        });\n        this.setState({ chats: newChatList });\n      }\n    };\n  };\n\n  setActivechat = (activeChat) => {\n    this.setState({ activeChat: activeChat });\n  };\n\n  sendFile = (chatId,data)=>{\n    const {socket} = this.props;\n    socket.emit(FILE_SENT,{chatId,data})\n  };\n\n  sendMessage = (chatId, message) => {\n    const { socket } = this.props;\n    socket.emit(MESSAGE_SENT, { chatId, message});\n  };\n\n  sendTyping = (chatId, isTyping) => {\n    const { socket, p2psocket } = this.props;\n    socket.emit(TYPING, { chatId, isTyping });\n  };\n\n  render() {\n    const { user, logout, socket } = this.props;\n    const { chats, activeChat } = this.state;\n    //console.log(chats)\n    //console.log(activeChat)\n    return (\n      <div className=\"Chat-container\">\n        <div className=\"side-bar\">\n          <SideBar\n            user={user}\n            logout={logout}\n            chats={chats}\n            activeChat={activeChat}\n            setActivechat={this.setActivechat}\n            openPrivateChat={this.sendPrivateChat}\n            socket={socket}\n          />\n        </div>\n        <div className=\"welcome-window\">\n          {activeChat !== null ? (\n            <ChatConsole\n              user={user}\n              activeChat={activeChat}\n              sendTyping={this.sendTyping}\n              sendMessage={this.sendMessage}\n              sendFile={this.sendFile}\n            />\n          ) : (\n            <div>\n              <h1>Welcome to chat app </h1>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ChatContainer;            ","import React, { Component } from 'react';\nimport io from 'socket.io-client';\nimport {USER_CONNECTED,LOG_OUT} from './actions/event'\nimport LoginForm from './components/LoginForm';\nimport ChatContainer from './chat/ChatContainer';\nimport './styles/app/Layout.css';\nimport p2p from 'socket.io-p2p';\n\nconst socketURL = \"/\";\nclass Layout extends Component {\n    constructor(props){\n        super( props );\n        this.state  = {\n            socket:null,\n            p2psocket:null,\n            user:null\n        }\n    }\n\n    componentWillMount(){\n        this.initSocket();\n    }\n    /// INIT SOCKET CONNECTION\n    initSocket= ()=>{\n        const socket = io(socketURL);\n        var opts = { peerOpts: { trickle: false }, autoUpgrade: false,usePeerConnection:true };\n        const p2psocket = new p2p(socket,opts);\n        socket.on('connect',()=>{\n            console.log('Connected')\n        })\n        this.setState({socket,p2psocket});\n    }\n    // SETUSER FUNCITON\n    setUser= (user)=>{\n        const {socket} = this.state;\n        socket.emit(USER_CONNECTED,user);\n        this.setState({user})\n    }\n    // logout user \n    logout = () => {\n        const { socket } =  this.state;\n        socket.emit(LOG_OUT,this.state.user.name);\n        this.setState({user:null})\n    }\n    render() {\n        const { socket ,user,p2psocket} =this.state;\n       // console.log(this.state);\n        return (\n          <div className=\"Layout-container\">\n            {user ? (\n              <ChatContainer\n                p2psocket={p2psocket}\n                socket={socket}\n                user={user}\n                logout={this.logout}\n              />\n            ) : (\n              <LoginForm socket={socket} setUser={this.setUser} />\n            )}\n          </div>\n        );\n    }\n}\n\nexport default Layout;","import React from 'react';\nimport Layout from './Layout';\nimport './styles/app/App.css'\n\n\n\n\nfunction App() {\n  let Loading;\n  Loading = setInterval(()=>{\n    return false;\n  },500)\n  return (\n    <div className=\"App\">\n      <Layout title=\"Let do it\" />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = {\n  COMMUNITY_CHAT: \"COMMUNITY_CHAT\",\n  MESSAGE_RECEIVED: \"MESSAGE_RECEIVED\",\n  MESSAGE_SENT: \"MESSAGE_SENT\",\n  USER_CONNECTED: \"USER_CONNECTED\",\n  USER_DISCONNECTED: \"USER_DISCONNECTED\",\n  TYPING: \"TYPING\",\n  VERIFY_USER: \"VERIFY_USER\",\n  LOG_OUT: \"LOG_OUT\",\n  PRIVATE_CHAT: \"PRIVATE_CHAT\",\n  FILE_SENT: \"FILE_SENT\",\n  FILE_RECEIVED: \"FILE_RECEIVED\",\n};"],"sourceRoot":""}